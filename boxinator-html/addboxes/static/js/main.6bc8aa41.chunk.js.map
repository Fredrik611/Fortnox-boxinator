{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["option","value","label","App","props","sendToDatabase","e","checks","preventDefault","console","log","state","axios","post","then","response","catch","error","name","weight","color","countryId","red","green","blue","toString","slice","c","split","this","componentToHex","hex","test","substring","length","join","Error","event","setState","target","rgb","hexToRgb","country","alert","className","onSubmit","type","onChange","handleName","handleWeight","rgbToHex","handleColor","options","defaultValue","handleCountry","id","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6bc8aa41.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport Select from 'react-select';\nimport axios from 'axios';\n\n// options for the dropdown menu.\nconst option = [\n    {value: 'swe', label: 'Sweden'},\n    {value: 'chi', label: 'China'},\n    {value: 'bra', label: 'Brazil'},\n    {value: 'aus', label: 'Australia'},\n]\n\n\nclass App extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state ={\n            name : '',\n            weight : 0,\n            color: '(255,255,255)',\n            countryId: \"swe\",\n        };\n\n    }\n\n    // convert hexadecimal to rgb color.\n    componentToHex(red, green, blue) {\n        const rgb = (red << 16) | (green << 8) | (blue << 0);\n        return '#' + (0x1000000 + rgb).toString(16).slice(1);\n    }\n    rgbToHex(color) {\n\n        var c = color.split(/[(,)]/);\n\n        return this.componentToHex(c[1],c[2],c[3])\n    }\n\n    hexToRgb(hex){\n        var c;\n        if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)){\n            c= hex.substring(1).split('');\n            if(c.length === 3){\n                c= [c[0], c[0], c[1], c[1], c[2], c[2]];\n            }\n            c= '0x'+c.join('');\n            return '('+[(c>>16)&255, (c>>8)&255, c&255].join(',')+')'\n        }\n        throw new Error('Bad Hex');\n    }\n\n\n    handleWeight(event) {\n        this.setState({weight: event.target.value})\n    }\n\n    handleName(event){\n        this.setState ({name: event.target.value})\n    }\n\n    handleColor(event){\n        var rgb = this.hexToRgb(event.target.value)\n        this.setState({color: rgb})\n    }\n    handleCountry(event){\n        this.setState({country: event.label, countryId: event.value})\n    }\n    checks(){\n\n        if(this.state.name === \"\"){\n            alert(\"Please fill in a name.\")\n            return false\n        }\n        else if(!/^[a-zåäöA-ZÅÄÖ \\s]+$/.test(this.state.name)){\n            alert(\"Name shall only have letters in it.\")\n            return false\n        }\n        if(this.state.weight < 0 ){\n            alert(\"No negative numbers\")\n            this.setState({weight: 0})\n            return false\n        }\n        return true\n    }\n\n    sendToDatabase = e => {\n        if(this.checks()) {\n            e.preventDefault();\n            console.log(this.state)\n            axios\n                .post('http://localhost:8080/boxes', this.state)\n                .then(response => {\n                    console.log(response)\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        }\n    }\n    render() {\n        return (\n            <div className=\"App\">\n                <form onSubmit={this.sendToDatabase}>\n                <label className=\"boxes\" >Name</label>\n                <input className=\"boxes\"\n                    type={'text'}\n                    value = {this.state.name}\n                    onChange={e => this.handleName(e)}\n                />\n                <label className=\"boxes\">Weight</label>\n                <input className=\"boxes\"\n                    type=\"number\"\n                    value={this.state.weight}\n                    onChange={e => this.handleWeight(e)}\n                />\n                <label className=\"boxes\">Box Color</label>\n                    <input className=\"boxes\"\n                        type=\"color\"\n                        value={this.rgbToHex(this.state.color)}\n                        onChange={e => this.handleColor(e)}\n\n                        />\n                    <label className=\"boxes\">Countries</label>\n\n                    <Select className=\"boxes\"\n                        name=\"form-dept-select\"\n                        options={option}\n                        defaultValue={{ label: \"Select Country\", value: 'swe' }}\n                        onChange={e => this.handleCountry(e)}\n                    />\n                    <button  id=\"button\" type=\"submit\">Save</button>\n                </form>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}